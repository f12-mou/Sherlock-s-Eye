CREATE OR REPLACE trigger UPDATE_USER_INFO  
BEFORE INSERT   
ON USERS
FOR EACH ROW
WHEN (LOWER(NEW.TYPE)=lower('DETECTIVE'))
BEGIN 
INSERT INTO DETECTIVES(DETECTIVE_ID) VALUES(:NEW.USER_ID);
END;
/

CREATE OR REPLACE trigger ADD_UNSOLVED_CASE 
AFTER UPDATE 
OF type   
ON CASES
FOR EACH ROW

WHEN(LOWER(NEW.TYPE)='unsolved')
BEGIN
INSERT INTO UNSOLVED_CASES(CASE_ID) VALUES(:OLD.CASE_ID);
DELETE FROM PENDING_CASES WHERE case_id=:old.case_id;
END;
/



CREATE OR REPLACE trigger ADD_SOLVED_CASE 
AFTER UPDATE 
OF type   
ON CASES
FOR EACH ROW

WHEN(LOWER(NEW.TYPE)='unsolved')
BEGIN
INSERT INTO SOLVED_CASES(CASE_ID) VALUES(:OLD.CASE_ID);
DELETE FROM PENDING_CASES WHERE case_id=:old.case_id;
END;
/

CREATE OR REPLACE trigger ADD_PENDING_CASE 
AFTER UPDATE 
OF type   
ON CASES
FOR EACH ROW

WHEN(LOWER(NEW.TYPE)='pending')
BEGIN
INSERT INTO PENDING_CASES(CASE_ID) VALUES(:OLD.CASE_ID);
END;
/

CREATE OR REPLACE TRIGGER DELETE_CASE 
BEFORE DELETE 
ON CASES  
FOR EACH ROW 

BEGIN 
IF (LOWER(:OLD.TYPE)='pending') THEN 
delete from pending_cases where case_id=:old.case_id;
ELSIF (LOWER(:old.TYPE)='unsolved') THEN 
delete from UNSOLVED_CASES WHERE case_id=:old.case_id; 
elsif  (lower(:old.type)='solved') THEN 
delete from SOLVED_CASES WHERE case_id=:old.case_id; 

END IF;
END;
/

CREATE OR REPLACE TRIGGER DELETE_DETECTIVE 
AFTER DELETE 
ON DETECTIVES 
FOR EACH ROW 

BEGIN 
DELETE FROM USERS WHERE user_id=:old.user_id;
END;
/


CREATE OR REPLACE TRIGGER ADDMESSAGE
AFTER INSERT 
ON MESSAGE 
FOR EACH ROW 

BEGIN 
INSERT INTO NOTIFICATION(USER_ID,ENTITY_NAME,NOTIFICATION_TEXT,NOTIFICATION_URL,SEEN,TIMESTAMP) 
VALUES (:new.m_to,'Message','You Have got a new message. Click to view','','NO',:new.m_date);
end;
/


CREATE OR REPLACE TRIGGER ADDUPDATE
AFTER INSERT 
ON UPDATES
FOR EACH ROW 

BEGIN 
INSERT INTO NOTIFICATION(USER_ID,ENTITY_NAME,NOTIFICATION_TEXT,NOTIFICATION_URL,SEEN,TIMESTAMP) 
VALUES (:new.m_to,'Update','Your case has been updated','/api/case/detailscase/'+:new.case_id,'NO',:new.m_date);
end;
/

CREATE OR REPLACE TRIGGER ADDDECLINEDCASE
AFTER UPDATE
of TYPE 
ON CASES 
FOR EACH ROW 

BEGIN 
IF (LOWER(:new.TYPE)='decline') THEN 
UPDATE FILED_CASES SET DETECTIVE_ID=NULL WHERE CASE_ID=:new.case_id;
INSERT INTO NOTIFICATION(USER_ID,ENTITY_NAME,NOTIFICATION_TEXT,NOTIFICATION_URL,SEEN,TIMESTAMP) 
VALUES (:new.m_to,'Declined Case','Your case has been declined','/api/case/detailscase/'+:new.case_id,'NO',:new.m_date);
END IF;
END;
/

